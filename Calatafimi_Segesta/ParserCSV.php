<?php

require("Parser_Object_confiscated.php");
require("Generate_File_RDF_XML.php");
/*
error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);*/

class ParserCSV
{
	public $Arguments_Confiscated=array();

	public function __construct($argments)
	{
		$this->Arguments_Confiscated=$argments;
	}

	public function Carica_csv()
	{
		Echo "Scritti i File Sul disco!";
		/******************************************************
		 * Create the handles
		 */
		$assets=fopen('assets.owl','w+') or die('Unable to create file');
		$locations=fopen('locations.owl','w+') or die('Unable to create file');
		$coordinates=fopen('geometry.owl','w+') or die('Unable to create file');
		$all=fopen('assetsAll.owl','w+') or die('Unable to create file');
		/******************************************************
		 * Print headers.
		 */
		fwrite($assets, file_get_contents('assets_preamble.owl.part'));
		fwrite($locations, file_get_contents('locations_preamble.owl.part'));
		fwrite($coordinates, file_get_contents('geometry_preamble.owl.part'));
		fwrite($all, file_get_contents('assetsAll_preamble.owl.part'));
		$timeString="Generated by ParserCSV.php & Generate_File_RDF_XML on ".date('d-m-Y-H-i');
		fwrite($assets, "<!-- ".$timeString."-->\n");
		fwrite($locations, "<!-- ".$timeString."-->\n");
		fwrite($coordinates, "<!-- ".$timeString."-->\n");
		fwrite($all, "<!-- ".$timeString."-->\n");
		$converter = new Generate_File_RDF_XML($assets, $locations, $coordinates,$all);
		$num1 = count($this->Arguments_Confiscated);
	    for ($i = 1; $i <= $num1-1; $i++)
	    {
	    	$new_Latitudine=$this->Arguments_Confiscated[$i] -> getLatitude();		//Latitudine
	    	$new_Longitudine=$this->Arguments_Confiscated[$i] -> getLongitude(); 	//Longitudine
	    	$new_ID_Bene=$this->Arguments_Confiscated[$i] -> getID_Bene();			//ID_Bene
	    	$new_Indirizzo=$this->Arguments_Confiscated[$i] -> getIndirizzo();		//Indirizzo
	    	$new_Assegnato=$this->Arguments_Confiscated[$i] -> getAssegnato();		//Assegnato
	    	$new_Descrizione=$this->Arguments_Confiscated[$i] -> getDescrizione();	//Descrizione
	    	$name_city=$this->Arguments_Confiscated[$i] -> getName_file_csv();
	    	$countryCode='IT';
	    	$converter->convert($i, $new_Latitudine,$new_Longitudine, $new_ID_Bene,$new_Indirizzo,$new_Assegnato,$new_Descrizione,$name_city,$countryCode);

	    }
		/******************************************************
		 * Print footers and close files.
		 */
		$footer="</rdf:RDF>\n\n";
		fwrite($assets, $footer);
		fwrite($locations, $footer);
		fwrite($coordinates, $footer);
		fwrite($all, $footer);
		fclose($all);
		fclose($assets);
		fclose($locations);
		fclose($coordinates);
	}
	public function Stampa()
	{
		$num1 = count($this->Arguments_Confiscated);
	    for ($i = 0; $i <= $num1-1; $i++)
	    {
		    print("Bene NÂ°".$i. "<br />\n");
		    print("Latitudine : ");
        	print($this->Arguments_Confiscated[$i]) -> getLatitude(). "<br />\n";
        	print("Longitudine : ");
		    print($this->Arguments_Confiscated[$i]) -> getLongitude(). "<br />\n";
		    print("ID_Bene : ");
		    print($this->Arguments_Confiscated[$i]) -> getID_Bene(). "<br />\n";
		    print("Indirizzo : ");
		    print($this->Arguments_Confiscated[$i]) -> getIndirizzo(). "<br />\n";
		    print("Assegnato : ");
		    print($this->Arguments_Confiscated[$i]) -> getAssegnato(). "<br />\n";
		    print("Descrizione : ");
		    print($this->Arguments_Confiscated[$i]) -> getDescrizione(). "<br />\n";
		    print("<br />\n");
		    print($this->Arguments_Confiscated[$i]) -> getName_file_csv(). "<br />\n";
		}
	}
}
?>